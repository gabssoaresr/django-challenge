version: '3.10'

services:
  db:
    image: postgres:12.18
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - TZ=America/Sao_Paulo
    restart: always
    command: postgres -p ${POSTGRES_PORT}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - ./.postgres:/var/lib/postgresql/data
    hostname: db
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -p ${POSTGRES_PORT}' ]
      interval: 5s
      timeout: 5s
      retries: 5

  application:
    restart: always
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - '${APP_PORT}:${APP_PORT}'
    volumes:
      - .:/usr/src/app
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    hostname: application
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  redis:
    image: redis:7.0.4
    ports:
      - '6378:6379'
    hostname: redis
    volumes:
      - redis:/data

  flower:
    image: mher/flower:0.9.7
    command: [ 'flower', '--broker=redis://redis:6379', '--port=5555' ]
    hostname: flower
    ports:
      - 5555:5555
    depends_on:
      redis:
        condition: service_started

volumes:
  db:
  redis:
